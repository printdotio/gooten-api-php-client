<?php
/**
 * PostSubmittedItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * PostSubmittedItem Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PostSubmittedItem implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'sku' => 'string',
        'product_id' => 'int',
        'product' => 'string',
        'quantity' => 'int',
        'status' => 'string',
        'tracking_number' => 'string',
        'tracking_url' => 'string',
        'ship_carrier_name' => 'string',
        'price' => '\Swagger\Client\Model\ProductPriceInfo',
        'discount_amount' => '\Swagger\Client\Model\ProductPriceInfo',
        'source_id' => 'string',
        'meta' => '\Swagger\Client\Model\Meta',
        'shipments' => '\Swagger\Client\Model\Shipment[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'sku' => 'Sku',
        'product_id' => 'ProductId',
        'product' => 'Product',
        'quantity' => 'Quantity',
        'status' => 'Status',
        'tracking_number' => 'TrackingNumber',
        'tracking_url' => 'TrackingUrl',
        'ship_carrier_name' => 'ShipCarrierName',
        'price' => 'Price',
        'discount_amount' => 'DiscountAmount',
        'source_id' => 'SourceId',
        'meta' => 'Meta',
        'shipments' => 'Shipments'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'sku' => 'setSku',
        'product_id' => 'setProductId',
        'product' => 'setProduct',
        'quantity' => 'setQuantity',
        'status' => 'setStatus',
        'tracking_number' => 'setTrackingNumber',
        'tracking_url' => 'setTrackingUrl',
        'ship_carrier_name' => 'setShipCarrierName',
        'price' => 'setPrice',
        'discount_amount' => 'setDiscountAmount',
        'source_id' => 'setSourceId',
        'meta' => 'setMeta',
        'shipments' => 'setShipments'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'sku' => 'getSku',
        'product_id' => 'getProductId',
        'product' => 'getProduct',
        'quantity' => 'getQuantity',
        'status' => 'getStatus',
        'tracking_number' => 'getTrackingNumber',
        'tracking_url' => 'getTrackingUrl',
        'ship_carrier_name' => 'getShipCarrierName',
        'price' => 'getPrice',
        'discount_amount' => 'getDiscountAmount',
        'source_id' => 'getSourceId',
        'meta' => 'getMeta',
        'shipments' => 'getShipments'
    );
  
    
    /**
      * $sku 
      * @var string
      */
    protected $sku;
    
    /**
      * $product_id 
      * @var int
      */
    protected $product_id;
    
    /**
      * $product The type of product that was bought
      * @var string
      */
    protected $product;
    
    /**
      * $quantity 
      * @var int
      */
    protected $quantity;
    
    /**
      * $status 
      * @var string
      */
    protected $status;
    
    /**
      * $tracking_number Deprecated. Use the Shipments array as this will be removed in a future release.
      * @var string
      */
    protected $tracking_number;
    
    /**
      * $tracking_url Deprecated. Use the Shipments array as this will be removed in a future release.
      * @var string
      */
    protected $tracking_url;
    
    /**
      * $ship_carrier_name Deprecated. Use the Shipments array as this will be removed in a future release.
      * @var string
      */
    protected $ship_carrier_name;
    
    /**
      * $price 
      * @var \Swagger\Client\Model\ProductPriceInfo
      */
    protected $price;
    
    /**
      * $discount_amount 
      * @var \Swagger\Client\Model\ProductPriceInfo
      */
    protected $discount_amount;
    
    /**
      * $source_id Partner's internal ID-- entirely optional
      * @var string
      */
    protected $source_id;
    
    /**
      * $meta An optional Map<string,string> of misc properties.
      * @var \Swagger\Client\Model\Meta
      */
    protected $meta;
    
    /**
      * $shipments 
      * @var \Swagger\Client\Model\Shipment[]
      */
    protected $shipments;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->sku = $data["sku"];
            $this->product_id = $data["product_id"];
            $this->product = $data["product"];
            $this->quantity = $data["quantity"];
            $this->status = $data["status"];
            $this->tracking_number = $data["tracking_number"];
            $this->tracking_url = $data["tracking_url"];
            $this->ship_carrier_name = $data["ship_carrier_name"];
            $this->price = $data["price"];
            $this->discount_amount = $data["discount_amount"];
            $this->source_id = $data["source_id"];
            $this->meta = $data["meta"];
            $this->shipments = $data["shipments"];
        }
    }
    
    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }
  
    /**
     * Sets sku
     * @param string $sku 
     * @return $this
     */
    public function setSku($sku)
    {
        
        $this->sku = $sku;
        return $this;
    }
    
    /**
     * Gets product_id
     * @return int
     */
    public function getProductId()
    {
        return $this->product_id;
    }
  
    /**
     * Sets product_id
     * @param int $product_id 
     * @return $this
     */
    public function setProductId($product_id)
    {
        
        $this->product_id = $product_id;
        return $this;
    }
    
    /**
     * Gets product
     * @return string
     */
    public function getProduct()
    {
        return $this->product;
    }
  
    /**
     * Sets product
     * @param string $product The type of product that was bought
     * @return $this
     */
    public function setProduct($product)
    {
        
        $this->product = $product;
        return $this;
    }
    
    /**
     * Gets quantity
     * @return int
     */
    public function getQuantity()
    {
        return $this->quantity;
    }
  
    /**
     * Sets quantity
     * @param int $quantity 
     * @return $this
     */
    public function setQuantity($quantity)
    {
        
        $this->quantity = $quantity;
        return $this;
    }
    
    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->status;
    }
  
    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        
        $this->status = $status;
        return $this;
    }
    
    /**
     * Gets tracking_number
     * @return string
     */
    public function getTrackingNumber()
    {
        return $this->tracking_number;
    }
  
    /**
     * Sets tracking_number
     * @param string $tracking_number Deprecated. Use the Shipments array as this will be removed in a future release.
     * @return $this
     */
    public function setTrackingNumber($tracking_number)
    {
        
        $this->tracking_number = $tracking_number;
        return $this;
    }
    
    /**
     * Gets tracking_url
     * @return string
     */
    public function getTrackingUrl()
    {
        return $this->tracking_url;
    }
  
    /**
     * Sets tracking_url
     * @param string $tracking_url Deprecated. Use the Shipments array as this will be removed in a future release.
     * @return $this
     */
    public function setTrackingUrl($tracking_url)
    {
        
        $this->tracking_url = $tracking_url;
        return $this;
    }
    
    /**
     * Gets ship_carrier_name
     * @return string
     */
    public function getShipCarrierName()
    {
        return $this->ship_carrier_name;
    }
  
    /**
     * Sets ship_carrier_name
     * @param string $ship_carrier_name Deprecated. Use the Shipments array as this will be removed in a future release.
     * @return $this
     */
    public function setShipCarrierName($ship_carrier_name)
    {
        
        $this->ship_carrier_name = $ship_carrier_name;
        return $this;
    }
    
    /**
     * Gets price
     * @return \Swagger\Client\Model\ProductPriceInfo
     */
    public function getPrice()
    {
        return $this->price;
    }
  
    /**
     * Sets price
     * @param \Swagger\Client\Model\ProductPriceInfo $price 
     * @return $this
     */
    public function setPrice($price)
    {
        
        $this->price = $price;
        return $this;
    }
    
    /**
     * Gets discount_amount
     * @return \Swagger\Client\Model\ProductPriceInfo
     */
    public function getDiscountAmount()
    {
        return $this->discount_amount;
    }
  
    /**
     * Sets discount_amount
     * @param \Swagger\Client\Model\ProductPriceInfo $discount_amount 
     * @return $this
     */
    public function setDiscountAmount($discount_amount)
    {
        
        $this->discount_amount = $discount_amount;
        return $this;
    }
    
    /**
     * Gets source_id
     * @return string
     */
    public function getSourceId()
    {
        return $this->source_id;
    }
  
    /**
     * Sets source_id
     * @param string $source_id Partner's internal ID-- entirely optional
     * @return $this
     */
    public function setSourceId($source_id)
    {
        
        $this->source_id = $source_id;
        return $this;
    }
    
    /**
     * Gets meta
     * @return \Swagger\Client\Model\Meta
     */
    public function getMeta()
    {
        return $this->meta;
    }
  
    /**
     * Sets meta
     * @param \Swagger\Client\Model\Meta $meta An optional Map<string,string> of misc properties.
     * @return $this
     */
    public function setMeta($meta)
    {
        
        $this->meta = $meta;
        return $this;
    }
    
    /**
     * Gets shipments
     * @return \Swagger\Client\Model\Shipment[]
     */
    public function getShipments()
    {
        return $this->shipments;
    }
  
    /**
     * Sets shipments
     * @param \Swagger\Client\Model\Shipment[] $shipments 
     * @return $this
     */
    public function setShipments($shipments)
    {
        
        $this->shipments = $shipments;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
