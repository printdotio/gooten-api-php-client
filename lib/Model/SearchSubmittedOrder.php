<?php
/**
 * SearchSubmittedOrder
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * SearchSubmittedOrder Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SearchSubmittedOrder implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'nice_id' => 'string',
        'source_id' => 'string',
        'items' => '\Swagger\Client\Model\PostSubmittedItem[]',
        'total' => '\Swagger\Client\Model\ProductPriceInfo',
        'shipping_total' => '\Swagger\Client\Model\ProductPriceInfo',
        'discount_code' => 'string',
        'discount_amount' => '\Swagger\Client\Model\ProductPriceInfo',
        'meta' => '\Swagger\Client\Model\Meta'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'Id',
        'nice_id' => 'NiceId',
        'source_id' => 'SourceId',
        'items' => 'Items',
        'total' => 'Total',
        'shipping_total' => 'ShippingTotal',
        'discount_code' => 'DiscountCode',
        'discount_amount' => 'DiscountAmount',
        'meta' => 'Meta'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'nice_id' => 'setNiceId',
        'source_id' => 'setSourceId',
        'items' => 'setItems',
        'total' => 'setTotal',
        'shipping_total' => 'setShippingTotal',
        'discount_code' => 'setDiscountCode',
        'discount_amount' => 'setDiscountAmount',
        'meta' => 'setMeta'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'nice_id' => 'getNiceId',
        'source_id' => 'getSourceId',
        'items' => 'getItems',
        'total' => 'getTotal',
        'shipping_total' => 'getShippingTotal',
        'discount_code' => 'getDiscountCode',
        'discount_amount' => 'getDiscountAmount',
        'meta' => 'getMeta'
    );
  
    
    /**
      * $id 
      * @var string
      */
    protected $id;
    
    /**
      * $nice_id 
      * @var string
      */
    protected $nice_id;
    
    /**
      * $source_id Clients can submit an ID they use for the order here.
      * @var string
      */
    protected $source_id;
    
    /**
      * $items 
      * @var \Swagger\Client\Model\PostSubmittedItem[]
      */
    protected $items;
    
    /**
      * $total 
      * @var \Swagger\Client\Model\ProductPriceInfo
      */
    protected $total;
    
    /**
      * $shipping_total 
      * @var \Swagger\Client\Model\ProductPriceInfo
      */
    protected $shipping_total;
    
    /**
      * $discount_code 
      * @var string
      */
    protected $discount_code;
    
    /**
      * $discount_amount 
      * @var \Swagger\Client\Model\ProductPriceInfo
      */
    protected $discount_amount;
    
    /**
      * $meta An optional Map<string,string> of misc properties.
      * @var \Swagger\Client\Model\Meta
      */
    protected $meta;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->nice_id = $data["nice_id"];
            $this->source_id = $data["source_id"];
            $this->items = $data["items"];
            $this->total = $data["total"];
            $this->shipping_total = $data["shipping_total"];
            $this->discount_code = $data["discount_code"];
            $this->discount_amount = $data["discount_amount"];
            $this->meta = $data["meta"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets nice_id
     * @return string
     */
    public function getNiceId()
    {
        return $this->nice_id;
    }
  
    /**
     * Sets nice_id
     * @param string $nice_id 
     * @return $this
     */
    public function setNiceId($nice_id)
    {
        
        $this->nice_id = $nice_id;
        return $this;
    }
    
    /**
     * Gets source_id
     * @return string
     */
    public function getSourceId()
    {
        return $this->source_id;
    }
  
    /**
     * Sets source_id
     * @param string $source_id Clients can submit an ID they use for the order here.
     * @return $this
     */
    public function setSourceId($source_id)
    {
        
        $this->source_id = $source_id;
        return $this;
    }
    
    /**
     * Gets items
     * @return \Swagger\Client\Model\PostSubmittedItem[]
     */
    public function getItems()
    {
        return $this->items;
    }
  
    /**
     * Sets items
     * @param \Swagger\Client\Model\PostSubmittedItem[] $items 
     * @return $this
     */
    public function setItems($items)
    {
        
        $this->items = $items;
        return $this;
    }
    
    /**
     * Gets total
     * @return \Swagger\Client\Model\ProductPriceInfo
     */
    public function getTotal()
    {
        return $this->total;
    }
  
    /**
     * Sets total
     * @param \Swagger\Client\Model\ProductPriceInfo $total 
     * @return $this
     */
    public function setTotal($total)
    {
        
        $this->total = $total;
        return $this;
    }
    
    /**
     * Gets shipping_total
     * @return \Swagger\Client\Model\ProductPriceInfo
     */
    public function getShippingTotal()
    {
        return $this->shipping_total;
    }
  
    /**
     * Sets shipping_total
     * @param \Swagger\Client\Model\ProductPriceInfo $shipping_total 
     * @return $this
     */
    public function setShippingTotal($shipping_total)
    {
        
        $this->shipping_total = $shipping_total;
        return $this;
    }
    
    /**
     * Gets discount_code
     * @return string
     */
    public function getDiscountCode()
    {
        return $this->discount_code;
    }
  
    /**
     * Sets discount_code
     * @param string $discount_code 
     * @return $this
     */
    public function setDiscountCode($discount_code)
    {
        
        $this->discount_code = $discount_code;
        return $this;
    }
    
    /**
     * Gets discount_amount
     * @return \Swagger\Client\Model\ProductPriceInfo
     */
    public function getDiscountAmount()
    {
        return $this->discount_amount;
    }
  
    /**
     * Sets discount_amount
     * @param \Swagger\Client\Model\ProductPriceInfo $discount_amount 
     * @return $this
     */
    public function setDiscountAmount($discount_amount)
    {
        
        $this->discount_amount = $discount_amount;
        return $this;
    }
    
    /**
     * Gets meta
     * @return \Swagger\Client\Model\Meta
     */
    public function getMeta()
    {
        return $this->meta;
    }
  
    /**
     * Sets meta
     * @param \Swagger\Client\Model\Meta $meta An optional Map<string,string> of misc properties.
     * @return $this
     */
    public function setMeta($meta)
    {
        
        $this->meta = $meta;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
