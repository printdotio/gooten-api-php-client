<?php


/**
 * Country
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * Country Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Country implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'name' => 'string',
        'code' => 'string',
        'is_supported' => 'bool',
        'measurement_code' => 'string',
        'flag_url' => 'string',
        'default_currency' => '\gooten.api.model\Currency'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'name' => 'Name',
        'code' => 'Code',
        'is_supported' => 'IsSupported',
        'measurement_code' => 'MeasurementCode',
        'flag_url' => 'FlagUrl',
        'default_currency' => 'DefaultCurrency'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'name' => 'setName',
        'code' => 'setCode',
        'is_supported' => 'setIsSupported',
        'measurement_code' => 'setMeasurementCode',
        'flag_url' => 'setFlagUrl',
        'default_currency' => 'setDefaultCurrency'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'name' => 'getName',
        'code' => 'getCode',
        'is_supported' => 'getIsSupported',
        'measurement_code' => 'getMeasurementCode',
        'flag_url' => 'getFlagUrl',
        'default_currency' => 'getDefaultCurrency'
    );
  
    
    /**
      * $name 
      * @var string
      */
    protected $name;
    
    /**
      * $code 
      * @var string
      */
    protected $code;
    
    /**
      * $is_supported 
      * @var bool
      */
    protected $is_supported;
    
    /**
      * $measurement_code 
      * @var string
      */
    protected $measurement_code;
    
    /**
      * $flag_url 
      * @var string
      */
    protected $flag_url;
    
    /**
      * $default_currency 
      * @var \gooten.api.model\Currency
      */
    protected $default_currency;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->name = $data["name"];
            $this->code = $data["code"];
            $this->is_supported = $data["is_supported"];
            $this->measurement_code = $data["measurement_code"];
            $this->flag_url = $data["flag_url"];
            $this->default_currency = $data["default_currency"];
        }
    }
    
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name 
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets code
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }
  
    /**
     * Sets code
     * @param string $code 
     * @return $this
     */
    public function setCode($code)
    {
        
        $this->code = $code;
        return $this;
    }
    
    /**
     * Gets is_supported
     * @return bool
     */
    public function getIsSupported()
    {
        return $this->is_supported;
    }
  
    /**
     * Sets is_supported
     * @param bool $is_supported 
     * @return $this
     */
    public function setIsSupported($is_supported)
    {
        
        $this->is_supported = $is_supported;
        return $this;
    }
    
    /**
     * Gets measurement_code
     * @return string
     */
    public function getMeasurementCode()
    {
        return $this->measurement_code;
    }
  
    /**
     * Sets measurement_code
     * @param string $measurement_code 
     * @return $this
     */
    public function setMeasurementCode($measurement_code)
    {
        
        $this->measurement_code = $measurement_code;
        return $this;
    }
    
    /**
     * Gets flag_url
     * @return string
     */
    public function getFlagUrl()
    {
        return $this->flag_url;
    }
  
    /**
     * Sets flag_url
     * @param string $flag_url 
     * @return $this
     */
    public function setFlagUrl($flag_url)
    {
        
        $this->flag_url = $flag_url;
        return $this;
    }
    
    /**
     * Gets default_currency
     * @return \gooten.api.model\Currency
     */
    public function getDefaultCurrency()
    {
        return $this->default_currency;
    }
  
    /**
     * Sets default_currency
     * @param \gooten.api.model\Currency $default_currency 
     * @return $this
     */
    public function setDefaultCurrency($default_currency)
    {
        
        $this->default_currency = $default_currency;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}


