<?php


/**
 * OrderPayment
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * OrderPayment Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OrderPayment implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'braintree_encrypted_cc_number' => 'string',
        'braintree_encrypted_cc_exp_date' => 'string',
        'braintree_encrypted_ccv' => 'string',
        'braintree_payment_nonce' => 'string',
        'partner_billing_key' => 'string',
        'total' => 'int',
        'currency_code' => 'string'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'braintree_encrypted_cc_number' => 'BraintreeEncryptedCCNumber',
        'braintree_encrypted_cc_exp_date' => 'BraintreeEncryptedCCExpDate',
        'braintree_encrypted_ccv' => 'BraintreeEncryptedCCV',
        'braintree_payment_nonce' => 'BraintreePaymentNonce',
        'partner_billing_key' => 'PartnerBillingKey',
        'total' => 'Total',
        'currency_code' => 'CurrencyCode'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'braintree_encrypted_cc_number' => 'setBraintreeEncryptedCcNumber',
        'braintree_encrypted_cc_exp_date' => 'setBraintreeEncryptedCcExpDate',
        'braintree_encrypted_ccv' => 'setBraintreeEncryptedCcv',
        'braintree_payment_nonce' => 'setBraintreePaymentNonce',
        'partner_billing_key' => 'setPartnerBillingKey',
        'total' => 'setTotal',
        'currency_code' => 'setCurrencyCode'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'braintree_encrypted_cc_number' => 'getBraintreeEncryptedCcNumber',
        'braintree_encrypted_cc_exp_date' => 'getBraintreeEncryptedCcExpDate',
        'braintree_encrypted_ccv' => 'getBraintreeEncryptedCcv',
        'braintree_payment_nonce' => 'getBraintreePaymentNonce',
        'partner_billing_key' => 'getPartnerBillingKey',
        'total' => 'getTotal',
        'currency_code' => 'getCurrencyCode'
    );
  
    
    /**
      * $braintree_encrypted_cc_number 
      * @var string
      */
    protected $braintree_encrypted_cc_number;
    
    /**
      * $braintree_encrypted_cc_exp_date 
      * @var string
      */
    protected $braintree_encrypted_cc_exp_date;
    
    /**
      * $braintree_encrypted_ccv 
      * @var string
      */
    protected $braintree_encrypted_ccv;
    
    /**
      * $braintree_payment_nonce 
      * @var string
      */
    protected $braintree_payment_nonce;
    
    /**
      * $partner_billing_key A code that when passed allows the order to be submitted on credit.
      * @var string
      */
    protected $partner_billing_key;
    
    /**
      * $total 
      * @var int
      */
    protected $total;
    
    /**
      * $currency_code 
      * @var string
      */
    protected $currency_code;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->braintree_encrypted_cc_number = $data["braintree_encrypted_cc_number"];
            $this->braintree_encrypted_cc_exp_date = $data["braintree_encrypted_cc_exp_date"];
            $this->braintree_encrypted_ccv = $data["braintree_encrypted_ccv"];
            $this->braintree_payment_nonce = $data["braintree_payment_nonce"];
            $this->partner_billing_key = $data["partner_billing_key"];
            $this->total = $data["total"];
            $this->currency_code = $data["currency_code"];
        }
    }
    
    /**
     * Gets braintree_encrypted_cc_number
     * @return string
     */
    public function getBraintreeEncryptedCcNumber()
    {
        return $this->braintree_encrypted_cc_number;
    }
  
    /**
     * Sets braintree_encrypted_cc_number
     * @param string $braintree_encrypted_cc_number 
     * @return $this
     */
    public function setBraintreeEncryptedCcNumber($braintree_encrypted_cc_number)
    {
        
        $this->braintree_encrypted_cc_number = $braintree_encrypted_cc_number;
        return $this;
    }
    
    /**
     * Gets braintree_encrypted_cc_exp_date
     * @return string
     */
    public function getBraintreeEncryptedCcExpDate()
    {
        return $this->braintree_encrypted_cc_exp_date;
    }
  
    /**
     * Sets braintree_encrypted_cc_exp_date
     * @param string $braintree_encrypted_cc_exp_date 
     * @return $this
     */
    public function setBraintreeEncryptedCcExpDate($braintree_encrypted_cc_exp_date)
    {
        
        $this->braintree_encrypted_cc_exp_date = $braintree_encrypted_cc_exp_date;
        return $this;
    }
    
    /**
     * Gets braintree_encrypted_ccv
     * @return string
     */
    public function getBraintreeEncryptedCcv()
    {
        return $this->braintree_encrypted_ccv;
    }
  
    /**
     * Sets braintree_encrypted_ccv
     * @param string $braintree_encrypted_ccv 
     * @return $this
     */
    public function setBraintreeEncryptedCcv($braintree_encrypted_ccv)
    {
        
        $this->braintree_encrypted_ccv = $braintree_encrypted_ccv;
        return $this;
    }
    
    /**
     * Gets braintree_payment_nonce
     * @return string
     */
    public function getBraintreePaymentNonce()
    {
        return $this->braintree_payment_nonce;
    }
  
    /**
     * Sets braintree_payment_nonce
     * @param string $braintree_payment_nonce 
     * @return $this
     */
    public function setBraintreePaymentNonce($braintree_payment_nonce)
    {
        
        $this->braintree_payment_nonce = $braintree_payment_nonce;
        return $this;
    }
    
    /**
     * Gets partner_billing_key
     * @return string
     */
    public function getPartnerBillingKey()
    {
        return $this->partner_billing_key;
    }
  
    /**
     * Sets partner_billing_key
     * @param string $partner_billing_key A code that when passed allows the order to be submitted on credit.
     * @return $this
     */
    public function setPartnerBillingKey($partner_billing_key)
    {
        
        $this->partner_billing_key = $partner_billing_key;
        return $this;
    }
    
    /**
     * Gets total
     * @return int
     */
    public function getTotal()
    {
        return $this->total;
    }
  
    /**
     * Sets total
     * @param int $total 
     * @return $this
     */
    public function setTotal($total)
    {
        
        $this->total = $total;
        return $this;
    }
    
    /**
     * Gets currency_code
     * @return string
     */
    public function getCurrencyCode()
    {
        return $this->currency_code;
    }
  
    /**
     * Sets currency_code
     * @param string $currency_code 
     * @return $this
     */
    public function setCurrencyCode($currency_code)
    {
        
        $this->currency_code = $currency_code;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}


