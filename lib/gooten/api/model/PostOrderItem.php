<?php


/**
 * PostOrderItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * PostOrderItem Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PostOrderItem implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'quantity' => 'int',
        'sku' => 'string',
        'ship_carrier_method_id' => 'int',
        'ship_type' => 'string',
        'images' => '\gooten.api.model\Image[]',
        'source_id' => 'string',
        'meta' => '\gooten.api.model\Meta'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'quantity' => 'Quantity',
        'sku' => 'SKU',
        'ship_carrier_method_id' => 'ShipCarrierMethodId',
        'ship_type' => 'ShipType',
        'images' => 'Images',
        'source_id' => 'SourceId',
        'meta' => 'Meta'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'quantity' => 'setQuantity',
        'sku' => 'setSku',
        'ship_carrier_method_id' => 'setShipCarrierMethodId',
        'ship_type' => 'setShipType',
        'images' => 'setImages',
        'source_id' => 'setSourceId',
        'meta' => 'setMeta'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'quantity' => 'getQuantity',
        'sku' => 'getSku',
        'ship_carrier_method_id' => 'getShipCarrierMethodId',
        'ship_type' => 'getShipType',
        'images' => 'getImages',
        'source_id' => 'getSourceId',
        'meta' => 'getMeta'
    );
  
    
    /**
      * $quantity 
      * @var int
      */
    protected $quantity;
    
    /**
      * $sku 
      * @var string
      */
    protected $sku;
    
    /**
      * $ship_carrier_method_id 
      * @var int
      */
    protected $ship_carrier_method_id;
    
    /**
      * $ship_type If one does not want to pass a ShipCarrierMethodId of a specific shipping method, one can instead pass 'Standard', 'Overnight', or 'Expedited' here.
      * @var string
      */
    protected $ship_type;
    
    /**
      * $images 
      * @var \gooten.api.model\Image[]
      */
    protected $images;
    
    /**
      * $source_id An optional place to pass in an ID for the OrderItem.
      * @var string
      */
    protected $source_id;
    
    /**
      * $meta An optional Map<string,string> of misc properties.
      * @var \gooten.api.model\Meta
      */
    protected $meta;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->quantity = $data["quantity"];
            $this->sku = $data["sku"];
            $this->ship_carrier_method_id = $data["ship_carrier_method_id"];
            $this->ship_type = $data["ship_type"];
            $this->images = $data["images"];
            $this->source_id = $data["source_id"];
            $this->meta = $data["meta"];
        }
    }
    
    /**
     * Gets quantity
     * @return int
     */
    public function getQuantity()
    {
        return $this->quantity;
    }
  
    /**
     * Sets quantity
     * @param int $quantity 
     * @return $this
     */
    public function setQuantity($quantity)
    {
        
        $this->quantity = $quantity;
        return $this;
    }
    
    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }
  
    /**
     * Sets sku
     * @param string $sku 
     * @return $this
     */
    public function setSku($sku)
    {
        
        $this->sku = $sku;
        return $this;
    }
    
    /**
     * Gets ship_carrier_method_id
     * @return int
     */
    public function getShipCarrierMethodId()
    {
        return $this->ship_carrier_method_id;
    }
  
    /**
     * Sets ship_carrier_method_id
     * @param int $ship_carrier_method_id 
     * @return $this
     */
    public function setShipCarrierMethodId($ship_carrier_method_id)
    {
        
        $this->ship_carrier_method_id = $ship_carrier_method_id;
        return $this;
    }
    
    /**
     * Gets ship_type
     * @return string
     */
    public function getShipType()
    {
        return $this->ship_type;
    }
  
    /**
     * Sets ship_type
     * @param string $ship_type If one does not want to pass a ShipCarrierMethodId of a specific shipping method, one can instead pass 'Standard', 'Overnight', or 'Expedited' here.
     * @return $this
     */
    public function setShipType($ship_type)
    {
        
        $this->ship_type = $ship_type;
        return $this;
    }
    
    /**
     * Gets images
     * @return \gooten.api.model\Image[]
     */
    public function getImages()
    {
        return $this->images;
    }
  
    /**
     * Sets images
     * @param \gooten.api.model\Image[] $images 
     * @return $this
     */
    public function setImages($images)
    {
        
        $this->images = $images;
        return $this;
    }
    
    /**
     * Gets source_id
     * @return string
     */
    public function getSourceId()
    {
        return $this->source_id;
    }
  
    /**
     * Sets source_id
     * @param string $source_id An optional place to pass in an ID for the OrderItem.
     * @return $this
     */
    public function setSourceId($source_id)
    {
        
        $this->source_id = $source_id;
        return $this;
    }
    
    /**
     * Gets meta
     * @return \gooten.api.model\Meta
     */
    public function getMeta()
    {
        return $this->meta;
    }
  
    /**
     * Sets meta
     * @param \gooten.api.model\Meta $meta An optional Map<string,string> of misc properties.
     * @return $this
     */
    public function setMeta($meta)
    {
        
        $this->meta = $meta;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}


