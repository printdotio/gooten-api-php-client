<?php
/**
 * OrderPriceResult
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * OrderPriceResult Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OrderPriceResult implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'items' => '\gooten.api.model\PriceInfo',
        'shipping' => '\gooten.api.model\PriceInfo',
        'tax' => '\gooten.api.model\PriceInfo',
        'coupon_code' => '\gooten.api.model\PriceInfo',
        'coupon_type' => 'string',
        'coupon_used' => 'string',
        'had_coupon_apply' => 'bool',
        'dollars_off' => 'int',
        'percent_off' => 'int',
        'had_error' => 'bool'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'items' => 'Items',
        'shipping' => 'Shipping',
        'tax' => 'Tax',
        'coupon_code' => 'CouponCode',
        'coupon_type' => 'CouponType',
        'coupon_used' => 'CouponUsed',
        'had_coupon_apply' => 'HadCouponApply',
        'dollars_off' => 'DollarsOff',
        'percent_off' => 'PercentOff',
        'had_error' => 'HadError'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'items' => 'setItems',
        'shipping' => 'setShipping',
        'tax' => 'setTax',
        'coupon_code' => 'setCouponCode',
        'coupon_type' => 'setCouponType',
        'coupon_used' => 'setCouponUsed',
        'had_coupon_apply' => 'setHadCouponApply',
        'dollars_off' => 'setDollarsOff',
        'percent_off' => 'setPercentOff',
        'had_error' => 'setHadError'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'items' => 'getItems',
        'shipping' => 'getShipping',
        'tax' => 'getTax',
        'coupon_code' => 'getCouponCode',
        'coupon_type' => 'getCouponType',
        'coupon_used' => 'getCouponUsed',
        'had_coupon_apply' => 'getHadCouponApply',
        'dollars_off' => 'getDollarsOff',
        'percent_off' => 'getPercentOff',
        'had_error' => 'getHadError'
    );
  
    
    /**
      * $items 
      * @var \gooten.api.model\PriceInfo
      */
    protected $items;
    
    /**
      * $shipping 
      * @var \gooten.api.model\PriceInfo
      */
    protected $shipping;
    
    /**
      * $tax 
      * @var \gooten.api.model\PriceInfo
      */
    protected $tax;
    
    /**
      * $coupon_code 
      * @var \gooten.api.model\PriceInfo
      */
    protected $coupon_code;
    
    /**
      * $coupon_type 
      * @var string
      */
    protected $coupon_type;
    
    /**
      * $coupon_used 
      * @var string
      */
    protected $coupon_used;
    
    /**
      * $had_coupon_apply 
      * @var bool
      */
    protected $had_coupon_apply;
    
    /**
      * $dollars_off 
      * @var int
      */
    protected $dollars_off;
    
    /**
      * $percent_off 
      * @var int
      */
    protected $percent_off;
    
    /**
      * $had_error 
      * @var bool
      */
    protected $had_error;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->items = $data["items"];
            $this->shipping = $data["shipping"];
            $this->tax = $data["tax"];
            $this->coupon_code = $data["coupon_code"];
            $this->coupon_type = $data["coupon_type"];
            $this->coupon_used = $data["coupon_used"];
            $this->had_coupon_apply = $data["had_coupon_apply"];
            $this->dollars_off = $data["dollars_off"];
            $this->percent_off = $data["percent_off"];
            $this->had_error = $data["had_error"];
        }
    }
    
    /**
     * Gets items
     * @return \gooten.api.model\PriceInfo
     */
    public function getItems()
    {
        return $this->items;
    }
  
    /**
     * Sets items
     * @param \gooten.api.model\PriceInfo $items 
     * @return $this
     */
    public function setItems($items)
    {
        
        $this->items = $items;
        return $this;
    }
    
    /**
     * Gets shipping
     * @return \gooten.api.model\PriceInfo
     */
    public function getShipping()
    {
        return $this->shipping;
    }
  
    /**
     * Sets shipping
     * @param \gooten.api.model\PriceInfo $shipping 
     * @return $this
     */
    public function setShipping($shipping)
    {
        
        $this->shipping = $shipping;
        return $this;
    }
    
    /**
     * Gets tax
     * @return \gooten.api.model\PriceInfo
     */
    public function getTax()
    {
        return $this->tax;
    }
  
    /**
     * Sets tax
     * @param \gooten.api.model\PriceInfo $tax 
     * @return $this
     */
    public function setTax($tax)
    {
        
        $this->tax = $tax;
        return $this;
    }
    
    /**
     * Gets coupon_code
     * @return \gooten.api.model\PriceInfo
     */
    public function getCouponCode()
    {
        return $this->coupon_code;
    }
  
    /**
     * Sets coupon_code
     * @param \gooten.api.model\PriceInfo $coupon_code 
     * @return $this
     */
    public function setCouponCode($coupon_code)
    {
        
        $this->coupon_code = $coupon_code;
        return $this;
    }
    
    /**
     * Gets coupon_type
     * @return string
     */
    public function getCouponType()
    {
        return $this->coupon_type;
    }
  
    /**
     * Sets coupon_type
     * @param string $coupon_type 
     * @return $this
     */
    public function setCouponType($coupon_type)
    {
        
        $this->coupon_type = $coupon_type;
        return $this;
    }
    
    /**
     * Gets coupon_used
     * @return string
     */
    public function getCouponUsed()
    {
        return $this->coupon_used;
    }
  
    /**
     * Sets coupon_used
     * @param string $coupon_used 
     * @return $this
     */
    public function setCouponUsed($coupon_used)
    {
        
        $this->coupon_used = $coupon_used;
        return $this;
    }
    
    /**
     * Gets had_coupon_apply
     * @return bool
     */
    public function getHadCouponApply()
    {
        return $this->had_coupon_apply;
    }
  
    /**
     * Sets had_coupon_apply
     * @param bool $had_coupon_apply 
     * @return $this
     */
    public function setHadCouponApply($had_coupon_apply)
    {
        
        $this->had_coupon_apply = $had_coupon_apply;
        return $this;
    }
    
    /**
     * Gets dollars_off
     * @return int
     */
    public function getDollarsOff()
    {
        return $this->dollars_off;
    }
  
    /**
     * Sets dollars_off
     * @param int $dollars_off 
     * @return $this
     */
    public function setDollarsOff($dollars_off)
    {
        
        $this->dollars_off = $dollars_off;
        return $this;
    }
    
    /**
     * Gets percent_off
     * @return int
     */
    public function getPercentOff()
    {
        return $this->percent_off;
    }
  
    /**
     * Sets percent_off
     * @param int $percent_off 
     * @return $this
     */
    public function setPercentOff($percent_off)
    {
        
        $this->percent_off = $percent_off;
        return $this;
    }
    
    /**
     * Gets had_error
     * @return bool
     */
    public function getHadError()
    {
        return $this->had_error;
    }
  
    /**
     * Sets had_error
     * @param bool $had_error 
     * @return $this
     */
    public function setHadError($had_error)
    {
        
        $this->had_error = $had_error;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
