<?php
/**
 * ProductBuildInfoSpace
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * ProductBuildInfoSpace Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductBuildInfoSpace implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'string',
        'description' => 'string',
        'index' => 'int',
        'default_rotation' => 'int',
        'layers' => '\gooten.api.model\ProductBuildInfo[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'Id',
        'description' => 'Description',
        'index' => 'Index',
        'default_rotation' => 'DefaultRotation',
        'layers' => 'Layers'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'description' => 'setDescription',
        'index' => 'setIndex',
        'default_rotation' => 'setDefaultRotation',
        'layers' => 'setLayers'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'description' => 'getDescription',
        'index' => 'getIndex',
        'default_rotation' => 'getDefaultRotation',
        'layers' => 'getLayers'
    );
  
    
    /**
      * $id 
      * @var string
      */
    protected $id;
    
    /**
      * $description 
      * @var string
      */
    protected $description;
    
    /**
      * $index 
      * @var int
      */
    protected $index;
    
    /**
      * $default_rotation 
      * @var int
      */
    protected $default_rotation;
    
    /**
      * $layers 
      * @var \gooten.api.model\ProductBuildInfo[]
      */
    protected $layers;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->description = $data["description"];
            $this->index = $data["index"];
            $this->default_rotation = $data["default_rotation"];
            $this->layers = $data["layers"];
        }
    }
    
    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param string $id 
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }
  
    /**
     * Sets description
     * @param string $description 
     * @return $this
     */
    public function setDescription($description)
    {
        
        $this->description = $description;
        return $this;
    }
    
    /**
     * Gets index
     * @return int
     */
    public function getIndex()
    {
        return $this->index;
    }
  
    /**
     * Sets index
     * @param int $index 
     * @return $this
     */
    public function setIndex($index)
    {
        
        $this->index = $index;
        return $this;
    }
    
    /**
     * Gets default_rotation
     * @return int
     */
    public function getDefaultRotation()
    {
        return $this->default_rotation;
    }
  
    /**
     * Sets default_rotation
     * @param int $default_rotation 
     * @return $this
     */
    public function setDefaultRotation($default_rotation)
    {
        
        $this->default_rotation = $default_rotation;
        return $this;
    }
    
    /**
     * Gets layers
     * @return \gooten.api.model\ProductBuildInfo[]
     */
    public function getLayers()
    {
        return $this->layers;
    }
  
    /**
     * Sets layers
     * @param \gooten.api.model\ProductBuildInfo[] $layers 
     * @return $this
     */
    public function setLayers($layers)
    {
        
        $this->layers = $layers;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
