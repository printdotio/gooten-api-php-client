<?php
/**
 * Product
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * Product Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Product implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'u_id' => 'string',
        'name' => 'string',
        'short_description' => 'string',
        'has_available_product_variants' => 'bool',
        'has_product_templates' => 'bool',
        'featured_index' => 'int',
        'max_zoom' => 'int',
        'retail_price' => '\gooten.api.model\ProductPriceInfo',
        'info' => '\gooten.api.model\ProductInfo[]',
        'product_image' => '\gooten.api.model\ProductImage[]',
        'price_info' => '\gooten.api.model\ProductPriceInfo',
        'partner_price_info' => '\gooten.api.model\ProductPriceInfo',
        'categories' => '\gooten.api.model\Category[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'id' => 'Id',
        'u_id' => 'UId',
        'name' => 'Name',
        'short_description' => 'ShortDescription',
        'has_available_product_variants' => 'HasAvailableProductVariants',
        'has_product_templates' => 'HasProductTemplates',
        'featured_index' => 'FeaturedIndex',
        'max_zoom' => 'MaxZoom',
        'retail_price' => 'RetailPrice',
        'info' => 'Info',
        'product_image' => 'ProductImage',
        'price_info' => 'PriceInfo',
        'partner_price_info' => 'PartnerPriceInfo',
        'categories' => 'Categories'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'u_id' => 'setUId',
        'name' => 'setName',
        'short_description' => 'setShortDescription',
        'has_available_product_variants' => 'setHasAvailableProductVariants',
        'has_product_templates' => 'setHasProductTemplates',
        'featured_index' => 'setFeaturedIndex',
        'max_zoom' => 'setMaxZoom',
        'retail_price' => 'setRetailPrice',
        'info' => 'setInfo',
        'product_image' => 'setProductImage',
        'price_info' => 'setPriceInfo',
        'partner_price_info' => 'setPartnerPriceInfo',
        'categories' => 'setCategories'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'u_id' => 'getUId',
        'name' => 'getName',
        'short_description' => 'getShortDescription',
        'has_available_product_variants' => 'getHasAvailableProductVariants',
        'has_product_templates' => 'getHasProductTemplates',
        'featured_index' => 'getFeaturedIndex',
        'max_zoom' => 'getMaxZoom',
        'retail_price' => 'getRetailPrice',
        'info' => 'getInfo',
        'product_image' => 'getProductImage',
        'price_info' => 'getPriceInfo',
        'partner_price_info' => 'getPartnerPriceInfo',
        'categories' => 'getCategories'
    );
  
    
    /**
      * $id The product type id. Represents a type/class of products. Can later be passed into the productvariant service to get available product variations.
      * @var int
      */
    protected $id;
    
    /**
      * $u_id An id that syncs between printio's staging and live environments.
      * @var string
      */
    protected $u_id;
    
    /**
      * $name 
      * @var string
      */
    protected $name;
    
    /**
      * $short_description 
      * @var string
      */
    protected $short_description;
    
    /**
      * $has_available_product_variants Whether or not the item returned is a Product, or ProductVariant. Items with a Sku will not have other product variants
      * @var bool
      */
    protected $has_available_product_variants;
    
    /**
      * $has_product_templates Whether or not the product has variants with templates.
      * @var bool
      */
    protected $has_product_templates;
    
    /**
      * $featured_index A value to sort featured items by. Note that this is null if IsFeatured=false
      * @var int
      */
    protected $featured_index;
    
    /**
      * $max_zoom 
      * @var int
      */
    protected $max_zoom;
    
    /**
      * $retail_price 
      * @var \gooten.api.model\ProductPriceInfo
      */
    protected $retail_price;
    
    /**
      * $info Content describing the product.
      * @var \gooten.api.model\ProductInfo[]
      */
    protected $info;
    
    /**
      * $product_image Product images. Note that this contains large and small images for web, mobile, etc
      * @var \gooten.api.model\ProductImage[]
      */
    protected $product_image;
    
    /**
      * $price_info 
      * @var \gooten.api.model\ProductPriceInfo
      */
    protected $price_info;
    
    /**
      * $partner_price_info 
      * @var \gooten.api.model\ProductPriceInfo
      */
    protected $partner_price_info;
    
    /**
      * $categories 
      * @var \gooten.api.model\Category[]
      */
    protected $categories;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->u_id = $data["u_id"];
            $this->name = $data["name"];
            $this->short_description = $data["short_description"];
            $this->has_available_product_variants = $data["has_available_product_variants"];
            $this->has_product_templates = $data["has_product_templates"];
            $this->featured_index = $data["featured_index"];
            $this->max_zoom = $data["max_zoom"];
            $this->retail_price = $data["retail_price"];
            $this->info = $data["info"];
            $this->product_image = $data["product_image"];
            $this->price_info = $data["price_info"];
            $this->partner_price_info = $data["partner_price_info"];
            $this->categories = $data["categories"];
        }
    }
    
    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }
  
    /**
     * Sets id
     * @param int $id The product type id. Represents a type/class of products. Can later be passed into the productvariant service to get available product variations.
     * @return $this
     */
    public function setId($id)
    {
        
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets u_id
     * @return string
     */
    public function getUId()
    {
        return $this->u_id;
    }
  
    /**
     * Sets u_id
     * @param string $u_id An id that syncs between printio's staging and live environments.
     * @return $this
     */
    public function setUId($u_id)
    {
        
        $this->u_id = $u_id;
        return $this;
    }
    
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name 
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets short_description
     * @return string
     */
    public function getShortDescription()
    {
        return $this->short_description;
    }
  
    /**
     * Sets short_description
     * @param string $short_description 
     * @return $this
     */
    public function setShortDescription($short_description)
    {
        
        $this->short_description = $short_description;
        return $this;
    }
    
    /**
     * Gets has_available_product_variants
     * @return bool
     */
    public function getHasAvailableProductVariants()
    {
        return $this->has_available_product_variants;
    }
  
    /**
     * Sets has_available_product_variants
     * @param bool $has_available_product_variants Whether or not the item returned is a Product, or ProductVariant. Items with a Sku will not have other product variants
     * @return $this
     */
    public function setHasAvailableProductVariants($has_available_product_variants)
    {
        
        $this->has_available_product_variants = $has_available_product_variants;
        return $this;
    }
    
    /**
     * Gets has_product_templates
     * @return bool
     */
    public function getHasProductTemplates()
    {
        return $this->has_product_templates;
    }
  
    /**
     * Sets has_product_templates
     * @param bool $has_product_templates Whether or not the product has variants with templates.
     * @return $this
     */
    public function setHasProductTemplates($has_product_templates)
    {
        
        $this->has_product_templates = $has_product_templates;
        return $this;
    }
    
    /**
     * Gets featured_index
     * @return int
     */
    public function getFeaturedIndex()
    {
        return $this->featured_index;
    }
  
    /**
     * Sets featured_index
     * @param int $featured_index A value to sort featured items by. Note that this is null if IsFeatured=false
     * @return $this
     */
    public function setFeaturedIndex($featured_index)
    {
        
        $this->featured_index = $featured_index;
        return $this;
    }
    
    /**
     * Gets max_zoom
     * @return int
     */
    public function getMaxZoom()
    {
        return $this->max_zoom;
    }
  
    /**
     * Sets max_zoom
     * @param int $max_zoom 
     * @return $this
     */
    public function setMaxZoom($max_zoom)
    {
        
        $this->max_zoom = $max_zoom;
        return $this;
    }
    
    /**
     * Gets retail_price
     * @return \gooten.api.model\ProductPriceInfo
     */
    public function getRetailPrice()
    {
        return $this->retail_price;
    }
  
    /**
     * Sets retail_price
     * @param \gooten.api.model\ProductPriceInfo $retail_price 
     * @return $this
     */
    public function setRetailPrice($retail_price)
    {
        
        $this->retail_price = $retail_price;
        return $this;
    }
    
    /**
     * Gets info
     * @return \gooten.api.model\ProductInfo[]
     */
    public function getInfo()
    {
        return $this->info;
    }
  
    /**
     * Sets info
     * @param \gooten.api.model\ProductInfo[] $info Content describing the product.
     * @return $this
     */
    public function setInfo($info)
    {
        
        $this->info = $info;
        return $this;
    }
    
    /**
     * Gets product_image
     * @return \gooten.api.model\ProductImage[]
     */
    public function getProductImage()
    {
        return $this->product_image;
    }
  
    /**
     * Sets product_image
     * @param \gooten.api.model\ProductImage[] $product_image Product images. Note that this contains large and small images for web, mobile, etc
     * @return $this
     */
    public function setProductImage($product_image)
    {
        
        $this->product_image = $product_image;
        return $this;
    }
    
    /**
     * Gets price_info
     * @return \gooten.api.model\ProductPriceInfo
     */
    public function getPriceInfo()
    {
        return $this->price_info;
    }
  
    /**
     * Sets price_info
     * @param \gooten.api.model\ProductPriceInfo $price_info 
     * @return $this
     */
    public function setPriceInfo($price_info)
    {
        
        $this->price_info = $price_info;
        return $this;
    }
    
    /**
     * Gets partner_price_info
     * @return \gooten.api.model\ProductPriceInfo
     */
    public function getPartnerPriceInfo()
    {
        return $this->partner_price_info;
    }
  
    /**
     * Sets partner_price_info
     * @param \gooten.api.model\ProductPriceInfo $partner_price_info 
     * @return $this
     */
    public function setPartnerPriceInfo($partner_price_info)
    {
        
        $this->partner_price_info = $partner_price_info;
        return $this;
    }
    
    /**
     * Gets categories
     * @return \gooten.api.model\Category[]
     */
    public function getCategories()
    {
        return $this->categories;
    }
  
    /**
     * Sets categories
     * @param \gooten.api.model\Category[] $categories 
     * @return $this
     */
    public function setCategories($categories)
    {
        
        $this->categories = $categories;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
