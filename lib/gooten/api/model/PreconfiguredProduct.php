<?php


/**
 * PreconfiguredProduct
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * PreconfiguredProduct Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PreconfiguredProduct implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'sku' => 'string',
        'name' => 'string',
        'description' => 'string',
        'price' => '\gooten.api.model\ProductPriceInfo',
        'items' => '\gooten.api.model\PreconfiguredItem[]',
        'images' => '\gooten.api.model\PreconfiguredProductImage[]'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'sku' => 'Sku',
        'name' => 'Name',
        'description' => 'Description',
        'price' => 'Price',
        'items' => 'Items',
        'images' => 'Images'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'sku' => 'setSku',
        'name' => 'setName',
        'description' => 'setDescription',
        'price' => 'setPrice',
        'items' => 'setItems',
        'images' => 'setImages'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'sku' => 'getSku',
        'name' => 'getName',
        'description' => 'getDescription',
        'price' => 'getPrice',
        'items' => 'getItems',
        'images' => 'getImages'
    );
  
    
    /**
      * $sku A sku that uniquely identifies the preconfigured product.
      * @var string
      */
    protected $sku;
    
    /**
      * $name 
      * @var string
      */
    protected $name;
    
    /**
      * $description 
      * @var string
      */
    protected $description;
    
    /**
      * $price 
      * @var \gooten.api.model\ProductPriceInfo
      */
    protected $price;
    
    /**
      * $items The item[s] that constitue the product.
      * @var \gooten.api.model\PreconfiguredItem[]
      */
    protected $items;
    
    /**
      * $images Product images. Can contain large and small images for web, mobile, etc
      * @var \gooten.api.model\PreconfiguredProductImage[]
      */
    protected $images;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->sku = $data["sku"];
            $this->name = $data["name"];
            $this->description = $data["description"];
            $this->price = $data["price"];
            $this->items = $data["items"];
            $this->images = $data["images"];
        }
    }
    
    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }
  
    /**
     * Sets sku
     * @param string $sku A sku that uniquely identifies the preconfigured product.
     * @return $this
     */
    public function setSku($sku)
    {
        
        $this->sku = $sku;
        return $this;
    }
    
    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
  
    /**
     * Sets name
     * @param string $name 
     * @return $this
     */
    public function setName($name)
    {
        
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }
  
    /**
     * Sets description
     * @param string $description 
     * @return $this
     */
    public function setDescription($description)
    {
        
        $this->description = $description;
        return $this;
    }
    
    /**
     * Gets price
     * @return \gooten.api.model\ProductPriceInfo
     */
    public function getPrice()
    {
        return $this->price;
    }
  
    /**
     * Sets price
     * @param \gooten.api.model\ProductPriceInfo $price 
     * @return $this
     */
    public function setPrice($price)
    {
        
        $this->price = $price;
        return $this;
    }
    
    /**
     * Gets items
     * @return \gooten.api.model\PreconfiguredItem[]
     */
    public function getItems()
    {
        return $this->items;
    }
  
    /**
     * Sets items
     * @param \gooten.api.model\PreconfiguredItem[] $items The item[s] that constitue the product.
     * @return $this
     */
    public function setItems($items)
    {
        
        $this->items = $items;
        return $this;
    }
    
    /**
     * Gets images
     * @return \gooten.api.model\PreconfiguredProductImage[]
     */
    public function getImages()
    {
        return $this->images;
    }
  
    /**
     * Sets images
     * @param \gooten.api.model\PreconfiguredProductImage[] $images Product images. Can contain large and small images for web, mobile, etc
     * @return $this
     */
    public function setImages($images)
    {
        
        $this->images = $images;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}


