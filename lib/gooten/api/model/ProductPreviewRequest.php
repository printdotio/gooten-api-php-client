<?php


/**
 * ProductPreviewRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  gooten.api.client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace gooten.api.model;

use \ArrayAccess;
/**
 * ProductPreviewRequest Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     gooten.api.client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ProductPreviewRequest implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'sku' => 'string',
        'template' => 'string',
        'images' => '\gooten.api.model\ProductPreviewImage[]',
        'max_height' => 'int',
        'max_width' => 'int'
    );
  
    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'sku' => 'Sku',
        'template' => 'Template',
        'images' => 'Images',
        'max_height' => 'MaxHeight',
        'max_width' => 'MaxWidth'
    );
  
    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'sku' => 'setSku',
        'template' => 'setTemplate',
        'images' => 'setImages',
        'max_height' => 'setMaxHeight',
        'max_width' => 'setMaxWidth'
    );
  
    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'sku' => 'getSku',
        'template' => 'getTemplate',
        'images' => 'getImages',
        'max_height' => 'getMaxHeight',
        'max_width' => 'getMaxWidth'
    );
  
    
    /**
      * $sku 
      * @var string
      */
    protected $sku;
    
    /**
      * $template 
      * @var string
      */
    protected $template;
    
    /**
      * $images 
      * @var \gooten.api.model\ProductPreviewImage[]
      */
    protected $images;
    
    /**
      * $max_height Max height of the resultant image. Defaults to 500px
      * @var int
      */
    protected $max_height;
    
    /**
      * $max_width Max width of the resultant image. Defaults to 500px
      * @var int
      */
    protected $max_width;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->sku = $data["sku"];
            $this->template = $data["template"];
            $this->images = $data["images"];
            $this->max_height = $data["max_height"];
            $this->max_width = $data["max_width"];
        }
    }
    
    /**
     * Gets sku
     * @return string
     */
    public function getSku()
    {
        return $this->sku;
    }
  
    /**
     * Sets sku
     * @param string $sku 
     * @return $this
     */
    public function setSku($sku)
    {
        
        $this->sku = $sku;
        return $this;
    }
    
    /**
     * Gets template
     * @return string
     */
    public function getTemplate()
    {
        return $this->template;
    }
  
    /**
     * Sets template
     * @param string $template 
     * @return $this
     */
    public function setTemplate($template)
    {
        
        $this->template = $template;
        return $this;
    }
    
    /**
     * Gets images
     * @return \gooten.api.model\ProductPreviewImage[]
     */
    public function getImages()
    {
        return $this->images;
    }
  
    /**
     * Sets images
     * @param \gooten.api.model\ProductPreviewImage[] $images 
     * @return $this
     */
    public function setImages($images)
    {
        
        $this->images = $images;
        return $this;
    }
    
    /**
     * Gets max_height
     * @return int
     */
    public function getMaxHeight()
    {
        return $this->max_height;
    }
  
    /**
     * Sets max_height
     * @param int $max_height Max height of the resultant image. Defaults to 500px
     * @return $this
     */
    public function setMaxHeight($max_height)
    {
        
        $this->max_height = $max_height;
        return $this;
    }
    
    /**
     * Gets max_width
     * @return int
     */
    public function getMaxWidth()
    {
        return $this->max_width;
    }
  
    /**
     * Sets max_width
     * @param int $max_width Max width of the resultant image. Defaults to 500px
     * @return $this
     */
    public function setMaxWidth($max_width)
    {
        
        $this->max_width = $max_width;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\gooten.api.client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}


